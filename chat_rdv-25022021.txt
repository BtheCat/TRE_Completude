
            [17:09] Hugo Herbelin : opam install coq=8.13
[17:09] Hugo Herbelin : opam install coq=8.5
[17:09] Hugo Herbelin : opam install coq.8.13
[17:09] Hugo Herbelin : opam install coq.8.5
[17:11] Hugo Herbelin : Require Import Forcing.
[17:11] Hugo Herbelin : make install
[17:12] Hugo Herbelin : user-contrib
[17:22] Hugo Herbelin : $COQBIN/coqide -R theories/ Forcin -I src/
[17:22] Hugo Herbelin : $COQBIN/coqide -R theories/ Forcing -I src/
[17:22] Hugo Herbelin : $COQBIN/coqide -R theories Forcing -I src
[17:23] Hugo Herbelin : Require Import Forcing.
[17:24] Hugo Herbelin : Forcing Translate bool using nat le.

Print boolᶠ.
[17:25] Hugo Herbelin : définir le langage des formules de la logique propositionnelle (->, /\, atomes)
[17:26] Hugo Herbelin : Inductive form :=
[17:26] Hugo Herbelin : | Atom : nat -> form
[17:26] Hugo Herbelin : | And : form -> form -> form
[17:26] Hugo Herbelin : | Imp : form -> form -> form.
[17:26] Hugo Herbelin : A ::= X | A /\ A | A -> A
[17:28] Hugo Herbelin : Definition sem (M:nat->Prop) (A:form) := ...
[17:28] Hugo Herbelin : match A with
[17:29] Hugo Herbelin : ...
[17:29] Hugo Herbelin : Fixpoint sem (M:nat->Prop) (A:form) :=
[17:30] Hugo Herbelin : Definition ctx := list form.
[17:32] Hugo Herbelin : Inductive included : ctx -> ctx -> Prop :=
[17:32] Hugo Herbelin : included_nil : included nil nil
[17:33] Hugo Herbelin : included_cons_yes : forall A ctx ctx', included ctx ctx' -> included ctx (cons A ctx')
[17:34] Hugo Herbelin : included_cons_yes : forall A ctx ctx', included ctx ctx' -> included (cons A ctx) (cons A ctx')
[17:41] Hugo Herbelin : Inductive provable : context -> form -> Prop := ...
[17:41] Hugo Herbelin : |-
[17:42] Hugo Herbelin : Forcing Definition completeness : (forall (M : nat->Prop) (A:form), sem M A) -> provable nil A using context included.
[17:42] Hugo Herbelin : Definition valid M A := forall (M : nat->Prop) (A:form), sem M A.
[17:43] Hugo Herbelin : Definition valid A := forall (M : nat->Prop) (A:form), sem M A.
[17:43] Hugo Herbelin : Definition valid A := forall (M : nat->Prop), sem M A.
[17:44] Hugo Herbelin : Forcing Definition completeness : valid A -> provable nil A using context included.
[17:48] Welcome to <b>PAO</b>!<br /><br />For help on using BigBlueButton see these (short) <a href="https://www.bigbluebutton.org/html5" target="_blank"><u>tutorial videos</u></a>.<br /><br />To join the audio bridge click the phone button.  Use a headset to avoid causing background noise for others.<br /><br />This server is running <a href="https://docs.bigbluebutton.org/" target="_blank"><u>BigBlueButton</u></a>.